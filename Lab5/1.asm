.MODEL CONV_CAP
.STACK 100H
.DATA
    ;DECLARE VARIABLES HERE
    MyArr1 DW 30 DUP(?)
    X DB "Enter Name: $"
    
         
.CODE
MAIN PROC
    ;INITIALYZING DS
    MOV AX,@DATA
    MOV DS,AX
    ;INPUT YOUR CODE HERE
    
    ;PRINTING THE FIRST MESSAGE
    LEA DX, X
    MOV AH, 9
    INT 21H 
    
    ;TAKING ARRAY TO THE SI REGISTER
    LEA SI, MyArr1 
    
    ;INITIALIZING INPUT LOOP
    MOV CX, 30 
    MOV AH, 1
    INPUT:    
    INT 21H
    
    ;PRESSING ENTER WILL FINISH INPUT LOOP
    CMP AL, 0DH
    JE OUTPUT
    
    ;PUTTING INPUT TO THE ARRAY
    MOV [SI], AL
    
    ;CONTINUING THE LOOP
    INC SI
    LOOP INPUT  
    
    ;INITIALIZING OUTPUT LOOP    
    OUTPUT:        
    MOV AH, 2        
    MOV DL, 0DH
    INT 21H
    MOV DL, 0AH
    INT 21H 
    
    ;TAKING ARRAY TO THE SI REGISTER AGAIN
    LEA SI, MyArr1 
            
    ;INITIALIZING CONV LOOP 
    MOV CX, 30
    CONV:
    ;TAKIING ELEMENTS FROM THE ARRAY    
    MOV DL, [SI]
    
    ;IF THE ELEMENT IS NULL THEN EXIT
    CMP DL, 000H
    JE EXIT
    
    ;IF THE ELEMENT IS SMALL LETTER
    CMP DL, 061H
    JGE CONV_CAP 
     
    ;IF THE NUMBER IS CAPITAL LETTER 
    CMP DL, 041H
    JGE CONV_SMA
    
    ;ELSE CONVERTED
    JMP CONVERTED
    
    ;FOR CAPITAL LETTER
    CONV_SMA:
    ;CHECKING CAPITAL LETTER FOR THE SECOND TIME
    CMP DL, 05AH
    JG CONVERTED
    
    ;CHANGING THE LETTER TO SMALL
    ADD DL, 020H
    JMP CONVERTED
    
    ;FOR SMALL LETTER    
    CONV_CAP:
    ;CHECKING SMALL LETTER FOR THE SECOND TIME
    CMP DL, 07AH
    JG CONVERTED
     
    ;CHANGING THE LETTER TO CAPITAL 
    SUB DL, 020H
    JMP CONVERTED  
    
    ;PRINTING THE MODIFIED LETTERS    
    CONVERTED:
    INT 21H
    
    ;CONTINUING THE LOOP
    INC SI
    LOOP CONV

    
    
    EXIT:
    ;EXIT TO DOS
    MOV AX,4C00H
    INT 21H
    MAIN ENDP
END MAIN


